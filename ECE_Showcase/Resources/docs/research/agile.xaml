<FlowDocument 
  xmlns='http://schemas.microsoft.com/winfx/2006/xaml/presentation'
  xmlns:x='http://schemas.microsoft.com/winfx/2006/xaml'>

    <Paragraph FontFamily="Calibri" FontSize="30">
        Agile and Lean software development
    </Paragraph>
	
	<Paragraph>
        Agile and Lean software development has gained tremendous popularity in the Software Engineering industry as well as in the research community. Agile software development methods follow an iterative and incremental style of development where collaborative self-organizing teams dynamically adjust to changing customer requirements. The term 'Agile' is an umbrella term used to capture a set of values and principles of software development. There are various methods that implement these values and principles, including Scrum, eXtreme Programming (XP), Crystal, Feature Driven Development (FDD), Dynamic Software Development Method (DSDM), and Adaptive Software Development (ASD). Scrum and XP are considered to be the most widely adopted Agile methods in the world. XP focuses on developmental practices, while Scrum mainly covers project management.
Lean principles of software development find their roots in the lean manufacturing systems, in particular the Toyota production system. A popular software development method that applies lean principles is Kanban. See Related Links on the right-hand column for more information.

    </Paragraph>

	<Paragraph>
Projects based on the industrial study of Agile and Lean software development principles, roles, and practices typically involve qualitative research. Qualitative research focuses on the rich experiences and perspectives of human participants gathered through interviews, focus groups, or questionnaires and analysed via rigorous procedures. Some research methodologies best suited to qualitative studies of industrial Agile practice include: Grounded Theory, Ethnography, Case Studies, and Action Research.
	</Paragraph>

    <Paragraph>
        Implementation-based projects on Agile and Lean methods will typically involve following an iterative and incremental approach to developing a software solution and conducting heuristic and/or user-based evaluations to assess its usability.
    </Paragraph>

    
</FlowDocument>