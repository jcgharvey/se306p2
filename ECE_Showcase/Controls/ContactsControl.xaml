<UserControl 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:s="http://schemas.microsoft.com/surface/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:System="clr-namespace:System;assembly=mscorlib" 
             x:Class="ECE_Showcase.Controls.ContactsControl"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    
    
    <UserControl.Resources >
        <Style
                x:Key="LBStyle"
                TargetType="ListBoxItem">
            <Setter Property="Background" Value="#633678"/>
        </Style>

        <DataTemplate x:Key="SurfaceListBoxItemDataTemplate">
            <s:SurfaceButton
                Background="#633678">
                <Label
                        Content="{Binding Name}" 
                        HorizontalAlignment="Left" 
                        VerticalAlignment="Center"
                        Foreground="#FFFFFF"
                    Background="Transparent"
                        FontSize="20"
                        FontFamily="Segoe UI Light">
                </Label>

            </s:SurfaceButton>
        </DataTemplate>

        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle SnapsToDevicePixels="true"
                           Margin="0"
                           Stroke="Black"
                           StrokeDashArray="1 2"
                           StrokeThickness="1" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ExpanderDownHeaderStyle"
       TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid SnapsToDevicePixels="False"
                          Background="Transparent">
                                <ContentPresenter SnapsToDevicePixels="True"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderRightHeaderStyle"
       TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid SnapsToDevicePixels="False"
                          Background="Transparent">
                                <ContentPresenter SnapsToDevicePixels="True"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Top"
                                          RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderUpHeaderStyle"
       TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid SnapsToDevicePixels="False"
                          Background="Transparent">
                                <ContentPresenter SnapsToDevicePixels="True"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderLeftHeaderStyle"
       TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid SnapsToDevicePixels="False"
                          Background="Transparent">
                                <ContentPresenter SnapsToDevicePixels="True"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Top"
                                          RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ArrowlessExpanderTemplate"
       TargetType="{x:Type Expander}">
            <Setter Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Background"
            Value="Transparent" />
            <Setter Property="HorizontalContentAlignment"
            Value="Stretch" />
            <Setter Property="VerticalContentAlignment"
            Value="Stretch" />
            <Setter Property="BorderBrush"
            Value="Transparent" />
            <Setter Property="BorderThickness"
            Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border SnapsToDevicePixels="true"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Margin="5"
                        BorderThickness="0"
                        CornerRadius="0">
                            <DockPanel>
                                <ToggleButton FontFamily="{TemplateBinding FontFamily}"
                                      FontSize="{TemplateBinding FontSize}"
                                      FontStretch="{TemplateBinding FontStretch}"
                                      FontStyle="{TemplateBinding FontStyle}"
                                      FontWeight="{TemplateBinding FontWeight}"
                                      Foreground="{TemplateBinding Foreground}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Padding="{TemplateBinding Padding}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                      Margin="0"
                                      MinHeight="0"
                                      MinWidth="0"
                                      x:Name="HeaderSite"
                                      Style="{StaticResource ExpanderDownHeaderStyle}"
                                      Content="{TemplateBinding Header}"
                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                      ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                      DockPanel.Dock="Top"
                                      IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <ContentPresenter Focusable="false"
                                          Visibility="Collapsed"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          x:Name="ExpandSite"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          DockPanel.Dock="Bottom" />
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded"
                             Value="true">
                                <Setter Property="Visibility"
                                TargetName="ExpandSite"
                                Value="Visible" />
                            </Trigger>
                            <Trigger Property="ExpandDirection"
                             Value="Right">
                                <Setter Property="DockPanel.Dock"
                                TargetName="ExpandSite"
                                Value="Right" />
                                <Setter Property="DockPanel.Dock"
                                TargetName="HeaderSite"
                                Value="Left" />
                                <Setter Property="Style"
                                TargetName="HeaderSite"
                                Value="{StaticResource ExpanderRightHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="ExpandDirection"
                             Value="Up">
                                <Setter Property="DockPanel.Dock"
                                TargetName="ExpandSite"
                                Value="Top" />
                                <Setter Property="DockPanel.Dock"
                                TargetName="HeaderSite"
                                Value="Bottom" />
                                <Setter Property="Style"
                                TargetName="HeaderSite"
                                Value="{StaticResource ExpanderUpHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="ExpandDirection"
                             Value="Left">
                                <Setter Property="DockPanel.Dock"
                                TargetName="ExpandSite"
                                Value="Left" />
                                <Setter Property="DockPanel.Dock"
                                TargetName="HeaderSite"
                                Value="Right" />
                                <Setter Property="Style"
                                TargetName="HeaderSite"
                                Value="{StaticResource ExpanderLeftHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                             Value="false">
                                <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ControlHitAreaBrush"    
        	Color="#00FFFFFF"/>
        <Style x:Key="SurfaceHitAreaBaseStyle"
        	TargetType="{x:Type Control}">
        	<Setter Property="SnapsToDevicePixels"
        		Value="False"/>
        	<Setter Property="Background"
        		Value="{StaticResource ControlHitAreaBrush}"/>
        	<Setter Property="IsTabStop"
        		Value="False"/>
        	<Setter Property="Focusable"
        		Value="False"/>
        	<Setter Property="FocusVisualStyle"
        		Value="{x:Null}"/>
        	<Setter Property="MinWidth"
        		Value="40" />
        	<Setter Property="MinHeight"
        		Value="40" />
        </Style>
        <Style x:Key="SurfaceVertScrollBarRepeatButton"
        	TargetType="{x:Type s:SurfaceRepeatButton}" >
        	<Setter Property="Interval"
        		Value="150" />
        	<Setter Property="BorderBrush"
        		Value="{x:Null}" />
        	<Setter Property="Background"
        		Value="{StaticResource ControlHitAreaBrush}" />
        	<Setter Property="OverridesDefaultStyle" Value="true"/>
        	<Setter Property="Focusable" Value="false"/>
        	<Setter Property="IsTabStop" Value="false"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type s:SurfaceRepeatButton}">
        				<Grid Width="40" Background="{TemplateBinding Background}">
        					<Rectangle  HorizontalAlignment="Center" 
        						x:Name="Line"
        						MinWidth="2"
        						Fill="{DynamicResource {x:Static s:SurfaceColors.TrackBackgroundBrushKey}}"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsEnabled"
        						Value="False">
        						<Setter Property="Fill"   
        							TargetName="Line"                             
        							Value="{DynamicResource {x:Static s:SurfaceColors.ThumbDisabledBrushKey}}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="SurfaceScrollBarThumbStyle"
        	TargetType="{x:Type s:SurfaceThumb}"
        	BasedOn="{StaticResource SurfaceHitAreaBaseStyle}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type s:SurfaceThumb}">
        				<ControlTemplate.Resources>
        					<Storyboard x:Key="Touch">
        						<DoubleAnimation Duration="0:0:0.05"
        							Storyboard.TargetName="Thumb"
        							Storyboard.TargetProperty="Width" 
        							To="16"/>
        						<ThicknessAnimation Duration="0:0:0.05"
        							Storyboard.TargetName="Thumb"
        							Storyboard.TargetProperty="Margin"
        							To="-1,0,-1,0" />
        					</Storyboard>
        					<Storyboard x:Key="Release">
        						<DoubleAnimation Duration="0:0:0.1"
        							Storyboard.TargetName="Thumb" 
        							Storyboard.TargetProperty="Width"
        							To="14"/>
        						<ThicknessAnimation Duration="0:0:0.1"
        							Storyboard.TargetName="Thumb"
        							Storyboard.TargetProperty="Margin" 
        							To="0,0,0,0" />
        					</Storyboard>
        				</ControlTemplate.Resources>
        				<Grid   x:Name="Grid"
        					Background="{TemplateBinding Background}"
        					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
        					<Rectangle  x:Name="Thumb"
        						Height="Auto"
        						Width="14" 
        						HorizontalAlignment="Stretch"
        						VerticalAlignment="Stretch"
        						Fill="#633678" />
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="s:TouchExtensions.AreAnyInputDevicesCapturedWithin"
        						Value="True">
        						<Trigger.EnterActions>
        							<BeginStoryboard Storyboard="{StaticResource Touch}"/>
        						</Trigger.EnterActions>
        						<Trigger.ExitActions>
        							<BeginStoryboard Storyboard="{StaticResource Release}"/>
        						</Trigger.ExitActions>
        					</Trigger>
        					<Trigger  Property="IsEnabled"
        						Value="False">
        						<Setter Property="Fill"
        							TargetName="Thumb"
        							Value="{DynamicResource {x:Static s:SurfaceColors.ThumbDisabledBrushKey}}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="SurfaceHorzScrollBarRepeatButton"
        	TargetType="{x:Type s:SurfaceRepeatButton}" >
        	<Setter Property="Interval"
        		Value="150" />
        	<Setter Property="BorderBrush"
        		Value="{x:Null}" />
        	<Setter Property="Background"
        		Value="{StaticResource ControlHitAreaBrush}" />
        	<Setter Property="OverridesDefaultStyle" Value="true"/>
        	<Setter Property="Focusable" Value="false"/>
        	<Setter Property="IsTabStop" Value="false"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type s:SurfaceRepeatButton}">
        				<Grid Height="40" Background="{TemplateBinding Background}">
        					<Rectangle VerticalAlignment="Center"
        						x:Name="Line"
        						MinHeight="2"
        						Fill="{DynamicResource {x:Static s:SurfaceColors.TrackBackgroundBrushKey}}"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsEnabled"
        						Value="False">
        						<Setter Property="Fill"   
        							TargetName="Line"                             
        							Value="{DynamicResource {x:Static s:SurfaceColors.ThumbDisabledBrushKey}}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="SurfaceScrollBarHorizThumbStyle"
        	TargetType="{x:Type s:SurfaceThumb}"
        	BasedOn="{StaticResource SurfaceHitAreaBaseStyle}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type s:SurfaceThumb}">
        				<ControlTemplate.Resources>
          <!-- Vertical orientation -->
        					<Storyboard x:Key="Touch">
        						<DoubleAnimation Duration="0:0:0.05"
        							Storyboard.TargetName="Thumb"
        							Storyboard.TargetProperty="Height" 
        							To="16"/>
        						<ThicknessAnimation Duration="0:0:0.05"
        							Storyboard.TargetName="Thumb"
        							Storyboard.TargetProperty="Margin"
        							To="0,-1,0,-1" />
        					</Storyboard>
        					<Storyboard x:Key="Release">
        						<DoubleAnimation Duration="0:0:0.1"
        							Storyboard.TargetName="Thumb" 
        							Storyboard.TargetProperty="Height"
        							To="14"/>
        						<ThicknessAnimation Duration="0:0:0.1"
        							Storyboard.TargetName="Thumb"
        							Storyboard.TargetProperty="Margin" 
        							To="0,0,0,0" />
        					</Storyboard>
        				</ControlTemplate.Resources>
        				<Grid x:Name="Grid"
        					Background="{TemplateBinding Background}"
        					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
        					<Rectangle  x:Name="Thumb"
        						Width="Auto"
        						Height="14"
        						HorizontalAlignment="Stretch"
        						VerticalAlignment="Stretch"  
        						Fill="{DynamicResource {x:Static s:SurfaceColors.ThumbEnabledBrushKey}}" />
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="s:TouchExtensions.AreAnyInputDevicesCapturedWithin"
        						Value="True">
        						<Trigger.EnterActions>
        							<BeginStoryboard Storyboard="{StaticResource Touch}"/>
        						</Trigger.EnterActions>
        						<Trigger.ExitActions>
        							<BeginStoryboard Storyboard="{StaticResource Release}"/>
        						</Trigger.ExitActions>
        					</Trigger>
        					<Trigger Property="IsEnabled"
        						Value="False">
        						<Setter Property="Fill"
        							TargetName="Thumb"
        							Value="{DynamicResource {x:Static s:SurfaceColors.ThumbDisabledBrushKey}}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="SurfaceScrollBarStyle"
        	TargetType="{x:Type s:SurfaceScrollBar}"
         >
        	<Style.Resources>
        		<System:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">38</System:Double>
        		<System:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">38</System:Double>
        	</Style.Resources>
        	<Setter Property="Stylus.IsPressAndHoldEnabled"
        		Value="False"/>
        	<Setter Property="Stylus.IsFlicksEnabled"
        		Value="False"/>
        	<Setter Property="Width"
        		Value="38"/>
        	<Setter Property="Height"
        		Value="Auto"/>
        	<Setter Property="Template">
        		<Setter.Value>
      <!-- vertical scroll bar -->
        			<ControlTemplate TargetType="{x:Type s:SurfaceScrollBar}">
        				<Grid x:Name="GridRoot" Background="{TemplateBinding Background}">
        					<Border x:Name="Track"
        						VerticalAlignment="Stretch"
        						HorizontalAlignment="Stretch">
        						<Track x:Name="PART_Track"
        							IsDirectionReversed="True">
        							<Track.IncreaseRepeatButton>
        								<s:SurfaceRepeatButton x:Name="IncreaseRepeat"
        									Background="{TemplateBinding Background}"
        									HorizontalAlignment="Center"
        									Style="{StaticResource SurfaceVertScrollBarRepeatButton}"
        									Command="ScrollBar.PageDownCommand"/>
        							</Track.IncreaseRepeatButton>
        							<Track.DecreaseRepeatButton>
        								<s:SurfaceRepeatButton x:Name="DecreaseRepeat"
        									Background="{TemplateBinding Background}"
        									HorizontalAlignment="Center"
        									Style="{StaticResource SurfaceVertScrollBarRepeatButton}"
        									Command="ScrollBar.PageUpCommand"/>
        							</Track.DecreaseRepeatButton>
        							<Track.Thumb>
        								<s:SurfaceThumb  Style="{StaticResource SurfaceScrollBarThumbStyle}"
        									Background="{TemplateBinding Background}"
        									HorizontalAlignment="Center" 
        									x:Name="Thumb"/>
        							</Track.Thumb>
        						</Track>
        					</Border>
        				</Grid>
        				<ControlTemplate.Triggers>
          <!-- Animates Scrollbar from small to large state -->
        					<Trigger Property="IsEnabled"
        						Value="False">
        						<Setter Property="IsEnabled"
        							TargetName="PART_Track"
        							Value="False"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>

        	<Style.BasedOn>
        		<StaticResource ResourceKey="SurfaceHitAreaBaseStyle"/>
        	</Style.BasedOn>

        	<Style.Triggers>
    <!-- Horizontal orientation -->
        		<Trigger Property="Orientation"   Value="Horizontal">
        			<Setter Property="Width"
        				Value="Auto"/>
        			<Setter Property="Height"
        				Value="38"/>
      <!-- change the whole template -->
        			<Setter Property="Template">
        				<Setter.Value>
        					<ControlTemplate TargetType="{x:Type s:SurfaceScrollBar}">
        						<Grid x:Name="GridRoot" Background="{TemplateBinding Background}">
        							<Border x:Name="Track"
        								VerticalAlignment="Stretch"
        								HorizontalAlignment="Stretch">
        								<Track x:Name="PART_Track">
        									<Track.DecreaseRepeatButton>
        										<s:SurfaceRepeatButton x:Name="DecreaseRepeat"
        											Background="{TemplateBinding Background}"
        											VerticalAlignment="Center"
        											Style="{StaticResource SurfaceHorzScrollBarRepeatButton}"													
        											Command="ScrollBar.PageLeftCommand" />
        									</Track.DecreaseRepeatButton>
        									<Track.IncreaseRepeatButton>
        										<s:SurfaceRepeatButton x:Name="IncreaseRepeat" 
        											Background="{TemplateBinding Background}"
        											VerticalAlignment="Center"
        											Style="{StaticResource SurfaceHorzScrollBarRepeatButton}"
        											Command="ScrollBar.PageRightCommand"/>
        									</Track.IncreaseRepeatButton>
        									<Track.Thumb>
        										<s:SurfaceThumb  Style="{StaticResource SurfaceScrollBarHorizThumbStyle}"	
        											Background="{TemplateBinding Background}"
        											VerticalAlignment="Center" 
        											x:Name="Thumb"/>
        									</Track.Thumb>
        								</Track>
        							</Border>
        						</Grid>
        						<ControlTemplate.Triggers>
              <!-- Animates Scrollbar from small to large state -->
        							<Trigger Property="IsEnabled"
        								Value="False">
        								<Setter Property="Opacity"
        									TargetName="IncreaseRepeat"
        									Value="0.33"/>
        								<Setter Property="Opacity"
        									TargetName="DecreaseRepeat"
        									Value="0.33"/>
        								<Setter Property="IsEnabled"
        									TargetName="PART_Track"
        									Value="False"/>
        							</Trigger>
        						</ControlTemplate.Triggers>
        					</ControlTemplate>
        				</Setter.Value>
        			</Setter>
        		</Trigger>
        	</Style.Triggers>
        </Style>
        <Style x:Key="SurfaceScrollViewerStyle1"
        	TargetType="{x:Type s:SurfaceScrollViewer}">
        	<Setter Property="Elasticity"
        		Value="0.4,0.4" />
        	<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
        		Value="Auto" />
        	<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
        		Value="Auto" />
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type s:SurfaceScrollViewer}">
        				<Grid   Background="{TemplateBinding Background}"
        					HorizontalAlignment="Stretch" 
        					VerticalAlignment="Stretch">
        					<Grid.ColumnDefinitions>
        						<ColumnDefinition Width="*" />
        						<ColumnDefinition Width="Auto" />
        					</Grid.ColumnDefinitions>
        					<Grid.RowDefinitions>
        						<RowDefinition Height="*" />
        						<RowDefinition Height="Auto" />
        					</Grid.RowDefinitions>
        					<Border x:Name="PART_ElasticBorder"
        						Background="{TemplateBinding Background}">
        						<ScrollContentPresenter 
        							Margin="-1,-1,-1,-1"
        							Grid.Column="0"
        							Grid.ColumnSpan="1"
        							Grid.Row="0"
        							Grid.RowSpan="1"
        							Content="{TemplateBinding Content}"
        							ContentTemplate="{TemplateBinding ContentTemplate}"
        							CanContentScroll="{TemplateBinding CanContentScroll}"
        							CanHorizontallyScroll="False"
        							CanVerticallyScroll="False"
        							ScrollViewer.HorizontalScrollBarVisibility="Disabled" />
        					</Border>

        					<s:SurfaceScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
        						x:Name="PART_HorizontalScrollBar"
        						Grid.Column="0"
        						Grid.Row="1"
        						Orientation="Horizontal"
        						Maximum="{TemplateBinding ScrollableWidth}"
        						Minimum="0"
        						Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
        						AutomationProperties.AutomationId="HorizontalScrollBar"
        						Height="Auto"
        						Style="{StaticResource SurfaceScrollBarStyle}"
        						LargeChange="1"
        						ViewportSize="{TemplateBinding ViewportWidth}"
        						ScrollViewer.HorizontalScrollBarVisibility="Disabled"
        						HorizontalContentAlignment="Stretch"
        						VerticalContentAlignment="Stretch"
        						HorizontalAlignment="Stretch"
        						Foreground="{x:Null}"/>
        					<s:SurfaceScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
        						x:Name="PART_VerticalScrollBar"                           
        						Grid.Column="1"
        						Grid.Row="0"
        						Orientation="Vertical"
        						Maximum="{TemplateBinding ScrollableHeight}"
        						Minimum="0"
        						Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
        						AutomationProperties.AutomationId="VerticalScrollBar"
        						Width="Auto"
        						Style="{StaticResource SurfaceScrollBarStyle}"
        						LargeChange="1"
        						ViewportSize="{TemplateBinding ViewportHeight}"
        						ScrollViewer.HorizontalScrollBarVisibility="Disabled"
        						HorizontalContentAlignment="Stretch"
        						VerticalContentAlignment="Stretch"
        						HorizontalAlignment="Stretch"
        						Foreground="{x:Null}"
        						IsEnabled="True"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsEnabled"
        						Value="False">
        						<Setter Property="IsEnabled"
        							TargetName="PART_HorizontalScrollBar"
        							Value="False" />
        						<Setter Property="IsEnabled"
        							TargetName="PART_VerticalScrollBar"
        							Value="False" />
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Name="TopDef" Height="160" />
            <RowDefinition />
        </Grid.RowDefinitions>


        <s:SurfaceScrollViewer x:Name="ScrollViewer"
                           Grid.Row="1"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Margin="20 0 0 0" Style="{DynamicResource SurfaceScrollViewerStyle1}"
                           
                           >
            
                            <!--
                            Foreground="Black" Style="{DynamicResource SurfaceScrollViewerStyle1}"
                            -->


            <RichTextBox Width="{Binding ViewportWidth, ElementName=ScrollViewer, Mode=Default}"
                     FontSize="20"
                     x:Name="infoViewer"
                     BorderThickness="0"
                     IsReadOnly="True"
                     IsDocumentEnabled="False"
                     Foreground="Purple"
                     Background="#FFFFEC"/>

        </s:SurfaceScrollViewer>

        <StackPanel
            Grid.Row="0">
            <Expander
            Background="#633678" 
            ScrollViewer.VerticalScrollBarVisibility="Hidden" 
            UseLayoutRounding="False" 
            BorderThickness="0"
            Style="{DynamicResource ArrowlessExpanderTemplate}" 
            TouchDown="Expander_TouchDown"
            TouchUp="Expander_TouchUp"
            >

                <Expander.Header>
                    <StackPanel>
                        <Image Source="/ECE_Showcase;component/Resources/img/directions.png" 
                               Stretch="Fill" 
                               d:LayoutOverrides="HorizontalMargin"/>
                        <TextBlock Foreground="White" FontFamily="Segoe UI Light" Margin="0, -35, 34, 0" FontSize="24" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                            directions
                        </TextBlock>
                            
                    </StackPanel>
                </Expander.Header>
                <ItemsControl Grid.Row="1"
                              Grid.Column="1"
                              Background="#633678">
                    <s:SurfaceButton PreviewTouchDown="EngineeringPath"
                                     Background="#633678">
                        <Label
                            Content="from the engineering building" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center"
                            Foreground="#FFFFFF"
                            Background="Transparent"
                            FontSize="20"
                            FontFamily="Segoe UI Light">
                        </Label>

                    </s:SurfaceButton>
                    <s:SurfaceButton
                        PreviewTouchDown="ClocktowerPath"
                        Background="#633678">
                        <Label
                            Content="from the clocktower" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center"
                            Foreground="#FFFFFF"
                            Background="Transparent"
                            FontSize="20"
                            FontFamily="Segoe UI Light">
                        </Label>
                    </s:SurfaceButton>
                    <s:SurfaceButton
                        PreviewTouchDown="PrincesPath"
                        Background="#633678">
                        <Label
                            Content="from the 38 princes st" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center"
                            Foreground="#FFFFFF"
                            Background="Transparent"
                            FontSize="20"
                            FontFamily="Segoe UI Light">
                        </Label>
                    </s:SurfaceButton>
                    
                </ItemsControl>

            </Expander>

        </StackPanel>

    </Grid>

    
        
        
</UserControl>
